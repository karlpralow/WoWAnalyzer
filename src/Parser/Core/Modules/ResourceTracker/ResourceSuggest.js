import React from 'react';
import { formatPercentage } from 'common/format';
import SpellLink from 'common/SpellLink'; 
import Wrapper from 'common/Wrapper';

  function suggest(when, tracker, suggestion) {
    const tracked = tracker.buildersObj[suggestion.spell.id];
    if(!tracked) return;

    const maxGenerated = tracked.generated + tracked.wasted;
    const wastedShare = (tracked.wasted / (maxGenerated));
    const resourceNameLower = tracker.resourceName.toLowerCase(); 
    
    when(wastedShare).isGreaterThan(suggestion.minor)
    .addSuggestion((suggest, actual, recommended) => {
      return suggest(<Wrapper>You are wasting {resourceNameLower} generated by <SpellLink id={suggestion.spell.id} />. {suggestion.extraSuggestion}</Wrapper>)
        .icon(suggestion.spell.icon)
        .actual(`${formatPercentage(wastedShare)}% wasted. Generated ${tracked.generated} out of ${maxGenerated} possible ${resourceNameLower}`)
        .recommended(`<${formatPercentage(suggestion.minor)}%  ${resourceNameLower} wasted is recommend`)
        .regular(suggestion.avg).major(suggestion.major);
    });
  }
  
  export default suggest;